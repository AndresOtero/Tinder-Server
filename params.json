{
  "name": "75.52 Tinder Application",
  "tagline": "Trabajo práctico para la asignatura 75.52 de Fiuba",
  "body": "# Tinder Application\r\n\r\nEsta es una aplicación realizada dentro del marco de trabajo práctico propuesto para la asignatura 75.52 Taller de Programación II\r\n\r\nBuild Status: [![Build Status](https://travis-ci.org/Tinder2Team/Tinder-Server.svg?branch=master)](https://travis-ci.org/Tinder2Team/Tinder-Server)\r\n\r\n## Configurar proyecto eclipse\r\n\r\n1. Correr el archivo **_\"configEclipse.sh\"_** parado en la raiz del proyecto, va a crear una carpeta llamada **_\"build\"_**.\r\n2. Dentro de eclipse **_\"import.. -> Existing Project into Workspace\"_**.\r\n3. Como root del proyecto hay que buscar el directorio **_\"build\"_** creado en el paso 1.\r\n4. Darle finish y con eso queda importado el proyecto en eclipse.\r\n\r\nHasta nuevo aviso, si se agrega un nuevo archivo, hay que correr\r\n**_cmake ../project/ -Dtest=on_**\r\n\r\nHay que instalar el paquete libboost-all-dev\r\nPara RocksDB hay que asegurarse de tener instalado libsnappy-dev libbz2-dev zlib1g-dev libcurl4-gnutls-dev libcrypto++-dev\r\n\r\n## Generar reporte de cobertura\r\n\r\n### Dependencias\r\n- gcovr (paquete aptitude)\r\n- lcov (pquete aptitude)\r\n\r\n### Cómo generar el reporte html\r\n\r\nLuego de haber hecho un make\r\n\r\n\r\n1. Correr el script **coverageReport.sh**\r\n2. Si no hubo ningún tipo de error se debe generar un reporte en $ROOT_DIRECTORY/build/coverage-report/index.html\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}